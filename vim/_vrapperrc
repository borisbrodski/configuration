vmap Y ygv<esc>
nmap Y y$
map gV `[v`]
map ga :let @a=@"<ENTER>
map -a :@let @a=@"<enter>

noremap -cf :set regexsearch<enter>:/^(<<<<<<< |=======$|>>>>>>> |\|\|\|\|\|\|\| )<enter>n
"noremap -fc :set noregexsearch<enter>:/<<<<<<<\|=======<enter>n
noremap -cd :set regexsearch<enter>:g/^(>>>>>>> |=======$|<<<<<<< |\|\|\|\|\|\|\| )/d<enter>
"noremap -cd :set noregexsearch<enter>vip:g/<<<<<<</d<enter>vip:g/>>>>>>/d<enter>vip:g/======/d<enter>vip:g/\|\|\|\|\|\|/d<enter>


" Smart surround macro
" let @s='ox<ESC>vr}<<kkA<SPACE><ESC>r{j_'
let @s='0v_hyox<ESC>0v_hp$vr}<<kkA<SPACE>x<ESC>r{j_'

" Surround with comment
surround c /*\r*/
surround C <!--<SPACE>\r<SPACE>-->

surround s '"<space>+<space>\r<space>+<space>"'

set autoindent
set ignorecase
set smartcase
set incsearch
set noregexsearch

set scrolloff=5

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set shiftround

eclipseaction ga org.eclipse.egit.ui.team.AddToIndex
eclipseaction linedown org.eclipse.ui.edit.text.moveLineDown
eclipseaction lineup org.eclipse.ui.edit.text.moveLineUp
nnoremap gj :linedown<ENTER>
nnoremap gk :lineup<ENTER>
vnoremap gj :linedown<ENTER>
vnoremap gk :lineup<ENTER>
" nnoremap ga :ga<ENTER> Don't work due to lost of the focus of the editor

" Save and add to Git index
command W w | ga
command Q w | ga | q

" Block visual selection with Ctrl+Shift+Q
map <c-s-q> <c-v>

" Block visual selection with Q in Visual Mode
" vmap q <c-q>


map <esc><esc> :let @/=""<enter>


" Fix Vrapper missing feature
nnoremap dv_ d^

" Jump to open/close tag
nnoremap -t vat<esc><esc>'<
nnoremap -T vat<esc><esc>'>

" If set, Vrapper will return to NormalMode anytime Eclipse exits its "Link Mode". Eclipse moves into Link Mode when prompting you to fill out arguments. This typically means Eclipse has drawn a box around some words and it wants you to fill them in.
set noexitlinkmode

" If set, search results will be highlighted
set hlsearch

" This setting changes the behavior of the hlsearch setting to restrict it to a number of editors. Whereas Vim will always quickly highlight the current search across all windows and tabs, in Vrapper this might take quite some time and resources. To tune the performance, the following values are supported:
"   clear - Only one editor can have active highlighting. Switching might change the highlighting if an editor gets reloaded, but normally the highlighting only changes if running a search in the current active editor.
"   local - Each editor gets its own highlighting, Vrapper will not clear or update it if doing anything in another editor.
"   window - All editors in the current window will use the same highlighting except for those which have noglobalregisters set (those use a local search register).
" Note that the above might behave weirdly if you open fresh editors or switch to an editor from your last session. This is a known issue and will be improved in due time.
set hlscope=local

vnoremap * y:set noregexsearch<enter>:let @/=@"<enter>n

" Line completion
imap <c-b> <c-x><c-l>

" Insert variable name based on type
" test(StringBuilder <|>) => test(StringBuilder stringBuilder)
nmap -ip m.ByE`.pb~e

" vmap <space> S)iconvert<ESC>
" nmap <space> viaS)iconvert<ESC>
" map <space> :retab<enter>:wq<ENTER>

" map <space>a <esc>viwyllve
" map <space>b o@Index(name = "<esc>pa")<esc>

" ???
" command NumberLines _vf/yj_P_W<C-a>

map <F1> <ESC>

# Cycle plugin
AddCycleGroup byte Byte
AddCycleGroup short Short
AddCycleGroup int Integer
AddCycleGroup long Long
AddCycleGroup double Double
AddCycleGroup float Float
AddCycleGroup boolean Boolean
AddCycleGroup @Nullable @NonNull
AddCycleGroup private protected public

nmap <s-space> <c-a>

" HelloWorldFromTheOtherWorld
" hello_world_from_the_other_world
" CamelCaseMotion
noremap öb <Plug>(subword-back)
noremap öh <Plug>(subword-back)
noremap öe <Plug>(subword-end)
noremap öw <Plug>(subword-word)
noremap öl <Plug>(subword-word)

vnoremap iö <Plug>(subword-inner)
onoremap iö <Plug>(subword-inner)
vnoremap aö <Plug>(subword-outer)
onoremap aö <Plug>(subword-outer)

"vnoremap ie <Plug>(subword-inner)
"onoremap ie <Plug>(subword-inner)
"vnoremap ic <Plug>(subword-outer)
"onoremap ic <Plug>(subword-outer)
"vnoremap ib <Plug>(subword-outer)
"onoremap ib <Plug>(subword-outer)
"vnoremap ac <Plug>(subword-outer)
"onoremap ac <Plug>(subword-outer)
"vnoremap ab <Plug>(subword-outer)
"onoremap ab <Plug>(subword-outer)

# Jump to the end of the line
map ä g_

" EXECUTE IMMEDIATE macro
let @e=vipUvip<ESC><ESC>iEXECUTE<S-SPACE>IMMEDIATE<S-SPACE>'<ESC>`<GT>a';<ESC>:.s/\///<ENTER>


" vim: ft=vim:
