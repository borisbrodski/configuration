" Mapping overview
" <leader>n  -  NERDTree
" Alt-n      -  NERDTreeFind
" Ctrl-n     -  multi-cursor
" F2         -  indent lines toggle
" F9         -  undo tree
"

if !empty(glob("$HOME/.vimrc_local-before"))
   source $HOME/.vimrc_local-before
endif

set langmenu=en_US.UTF-8
if has('win32')
  language english
else
  language en_US.UTF-8
endif

execute pathogen#infect()
Helptags
syntax enable
set background=light
if has('gui_running')
  colorscheme solarized
  " set guioptions-=T  " no toolbar
  if has('win32')
    set encoding=UTF-8
    au GUIEnter * simalt ~x
  endif
endif
filetype plugin indent on

" TEST IT
set encoding=UTF-8

let mapleader="-"


" Set GUI font
" :redir @a
" :set gfn?
" :redir END
if has('win32')
  "set guifont=Consolas:h11:cANSI
  set guifont=Droid_Sans_Mono_Dotted_for_Powe:h11:cANSI
  "set guifont=Hack:h11:cANSI
endif
noremap <silent> <leader>n :NERDTreeToggle<cr>
noremap <silent> <M-n> :NERDTreeFind<cr>

let g:NERDTreeIndicatorMap = {
	\ "Modified"  : ">",
	\ "Staged"    : "*",
	\ "Untracked" : "?",
	\ "Renamed"   : "=",
	\ "Unmerged"  : "#",
	\ "Deleted"   : "-",
	\ "Dirty"     : ">",
	\ "Clean"     : "$",
	\ "Unknown"   : "."
	\ }


if has("persistent_undo")
    set undodir='~/.vim/undodir/'
    set undofile
endif

if has('win32')
	set fileformats=dos
endif
set diffopt+=iwhite

set showmatch " Show matching brackets.
set ignorecase " Search ignoring case
set smartcase " Do smart case matching
set hlsearch
set incsearch
set hidden
set mouse=a
set showcmd
set ruler
set laststatus=2
set statusline=%F%m%r%h%w\ [%{&ff},%{&fileencoding}][%Y][\%03.3b,0x\%02.2B][%l/%L,%v]%p%%
set tag+=../tags
set nostartofline " leave my cursor where it was
set scrolloff=5 " Keep 5 lines (top/bottom) for scope
set showcmd " show the command being typed
set sidescrolloff=5 " Keep 5 lines at the size
"set lazyredraw " do not redraw while running macros
set wildchar=<Tab> wildmenu wildmode=full
set fileencodings+=utf-8,cp1252,latin1
set backspace=indent,eol,start
set history=1000
set matchpairs+=<:>
set modeline
set modelines=5

"set ssop-=folds      " do not store folds in the session

set backupdir=~/vimtmp,.
set directory=~/vimtmp,.

let g:tex_flavor='tex'

"set viewdir=~\.vim\views\   " Cause indent STOP working. VIM BUG??

nnoremap <silent> <c-right> :bn<cr>
nnoremap <silent> <c-left> :bp<cr>

" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1


if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" unicode symbols

" powerline symbols
let g:airline_left_alt_sep = ''
let g:airline_left_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.crypt = ''
let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = 'Ξ'
let g:airline_symbols.notexists = 'Σ'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.readonly = ''
let g:airline_symbols.spell = 'Ω'
let g:airline_symbols.whitespace = '·'

" BufExplorer
nnoremap <C-Tab> :BufExplorer<CR>j
augroup BUF_EXPLORER
  autocmd!
  autocmd BufEnter \[BufExplorer\] nmap <buffer> <TAB> o
augroup END

" Undo tree
nnoremap <F9> :UndotreeToggle<cr>

" CtrlP
"set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe,*.so,*.dll,*.class,*.jar,*.zip,*.xtendbin,*.war,*.ear,*.7z
set wildignore+=*.swp,*.zip,*.exe,*.so,*.dll,*.class,*.jar,*.zip,*.xtendbin,*.war,*.ear,*.7z,*.jpg,*.jpeg,*.png,*.git,*.pdf
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn|target|bin)|target|sourceJarTemp|binJarTemp$',
  \ 'file': '\v\.(so)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

" incsearch.vim
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

let g:incsearch#auto_nohlsearch = 1
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map #  <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

" indentline
let g:indentLine_enabled = 0
nnoremap <silent> <F2> :IndentLinesToggle<CR>

" --------------- auto cmds
augroup MY
  autocmd!
  autocmd filetype xml   nnoremap <buffer> <space>	<localleader>%
  autocmd filetype ant   nnoremap <buffer> <space>	<localleader>%

  autocmd Filetype xml setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd Filetype html setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd Filetype ruby setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype javascript setlocal ts=4 sts=4 sw=4 expandtab
  autocmd Filetype java setlocal ts=4 sts=4 sw=4 expandtab
  autocmd Filetype bash setlocal ts=4 sts=4 sw=4 noexpandtab

  autocmd Filetype vim nnoremap <buffer> <SPACE> :execute getline(".")<CR>
  autocmd BufWrite $MYVIMRC :source $MYVIMRC

  autocmd BufNewFile,BufRead *.ahk			setf autohotkey
augroup END





" --------------- My stuff

function! AddToRegister(group)
  call setreg(v:register, getreg() . submatch(a:group), 'l')
  return submatch(0)
endfunction

function! YankAllMatched(...) range
  if a:0 == 0
    let l:group=0
  else
    let l:group=a:1
  endif
  call setreg(v:register, '', 'c')
  execute a:firstline . ',' . a:lastline . 's//\=AddToRegister(' . l:group . ')/g'
endfunction


" Redmine table aligner
command! -range=% AlignRedmineTable <line1>,<line2>Tabularize /.[^|]*\zs|

nnoremap <F5> :diffupdate<CR>
vnoremap <F5> <ESC>:diffupdate<CR>

" Edit .vimrc
nnoremap <leader>ev :e $MYVIMRC<CR>

nnoremap <leader>da :bd#<CR>

" Uncomment large block with -u
nmap <silent> <leader>u vaC<leader>cu

if !empty(glob("$HOME/.vimrc_local-after"))
   source "$HOME/.vimrc_local-after"
endif

" vim: set ts=2 sts=2 sw=2 expandtab:
