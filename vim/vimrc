" Use runtime! my.vim to use other files

call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

runtime macros/matchit.vim

set showmatch " Show matching brackets.
set smartcase		" Do smart case matching
set hlsearch
set incsearch
set hidden
set mouse=a
set selectmode=key
set mousemodel=popup
set keymodel=startsel,stopsel
set selection=exclusive

" Fix stopsel behavior in Visual Mode
vnoremap <Left> h
vnoremap <Right> l
vnoremap <Up> k
vnoremap <Down> j


" --------------- RAILS
set nocompatible
syntax on
filetype plugin indent on
"helptags ~/.vim/doc

" --------------- LATEX
" REQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin on

" IMPORTANT: win32 users will need to have 'shellslash' set so that latex
" can be called correctly.
" set shellslash

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse Latex-Suite. Set your grep
" program to always generate a file-name.
set grepprg=grep\ -nH\ $*

" OPTIONAL: This enables automatic indentation as you type.
" (Already set above)
" filetype indent on

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'



let mapleader=','
map <leader>ew :e <C-R>=expand("%:p:h") . "/" <CR>
map <leader>es :sp <C-R>=expand("%:p:h") . "/" <CR>
map <leader>ev :vsp <C-R>=expand("%:p:h") . "/" <CR>
map <leader>et :tabe <C-R>=expand("%:p:h") . "/" <CR>

"Map ctrl+n to toggle NERDtree
nmap <silent> <c-n> :NERDTreeToggle<CR>
nmap <silent> <c-p> :TlistToggle<CR>
nmap <silent> <c-c> :FufCoverageFile<CR>
nmap <silent> <c-t> :FufTag<CR>
nmap <silent> g<c-t> :FufTagWithCursorWord<CR>

imap <c-f> => 
nmap <c-a> ggVG

"nmap \ll :silent! call Tex_RunLaTeX()<CR>

autocmd FileType tex setlocal shiftwidth=2 tabstop=2
autocmd FileType latex setlocal shiftwidth=2 tabstop=2

hi SpellBad term=reverse ctermbg=2
hi SpellCap term=reverse ctermbg=2
hi SpellRare term=reverse ctermbg=2
hi SpellLocal term=reverse ctermbg=2

function! Paste(mode)
  if a:mode == "v"
    normal gv
    normal "+P
    normal l
  elseif a:mode == "i"
    set virtualedit=all
    normal `^"+gP
    let &virtualedit = ""
  endif
endfunction

vnoremap <C-X> "+d
vnoremap <C-C> "+y
inoremap <C-V> <C-O>:call Paste("i")<CR>
" nnoremap <C-V> "+gPl
" vnoremap <C-V> :<C-U>call Paste("v")<CR>
